const io = require("socket.io-client");

// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–≤–æ–Ω–∫–∞—Ö
const testCallNotifications = () => {
  console.log("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–≤–æ–Ω–∫–∞—Ö...");

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ CRM —Å–µ—Ä–≤–µ—Ä—É
  const socket = io("http://localhost:5004", {
    transports: ["websocket", "polling"],
  });

  socket.on("connect", () => {
    console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ CRM —Å–µ—Ä–≤–µ—Ä—É");

    // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID = 1)
    socket.emit("authenticate", 1);
    console.log("üîê –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: 1");

    // –°–∏–º—É–ª—è—Ü–∏—è –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      console.log("üìû –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫...");

      const testCallData = {
        type: "incoming_call",
        receiverUserId: 1,
        receiverName: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á –ú–∏–∑–∏–Ω—Ü–æ–≤",
        callerNumber: "89271390907",
        callerName: "–¢–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω—è—â–∏–π",
        callerType: "user",
        receiverNumber: "89271390907",
        timestamp: new Date().toISOString(),
        channel: "SIP/test-123",
      };

      socket.emit("incoming_call", testCallData);
    }, 2000);

    // –°–∏–º—É–ª—è—Ü–∏—è –Ω–∞—á–∞–ª–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      console.log("üì± –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞...");

      const testCallStartedData = {
        type: "call_started",
        receiverUserId: 1,
        receiverName: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á –ú–∏–∑–∏–Ω—Ü–æ–≤",
        callerNumber: "89271390907",
        receiverNumber: "89271390907",
        timestamp: new Date().toISOString(),
        channel: "SIP/test-123",
      };

      socket.emit("call_started", testCallStartedData);
    }, 5000);

    // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      console.log("üì¥ –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–∞...");

      const testCallEndedData = {
        type: "call_ended",
        receiverUserId: 1,
        receiverName: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á –ú–∏–∑–∏–Ω—Ü–æ–≤",
        callerNumber: "89271390907",
        receiverNumber: "89271390907",
        timestamp: new Date().toISOString(),
        channel: "SIP/test-123",
        duration: 180, // 3 –º–∏–Ω—É—Ç—ã
      };

      socket.emit("call_ended", testCallEndedData);
    }, 8000);

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ 12 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      console.log("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
      socket.disconnect();
      process.exit(0);
    }, 12000);
  });

  socket.on("disconnect", () => {
    console.log("‚ùå –û—Ç–∫–ª—é—á–µ–Ω –æ—Ç CRM —Å–µ—Ä–≤–µ—Ä–∞");
  });

  socket.on("connect_error", (error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ CRM —Å–µ—Ä–≤–µ—Ä—É:", error.message);
    process.exit(1);
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)
  socket.on("incoming_call", (data) => {
    console.log("üì® –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—Ö–æ–¥—è—â–µ–º –∑–≤–æ–Ω–∫–µ:", data);
  });

  socket.on("call_started", (data) => {
    console.log("üì® –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:", data);
  });

  socket.on("call_ended", (data) => {
    console.log("üì® –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–≤–æ–Ω–∫–∞:", data);
  });
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
if (args.includes("--help") || args.includes("-h")) {
  console.log(`
üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–≤–æ–Ω–∫–∞—Ö

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  node test-call-notifications.js [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --help, -h     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  --user-id <id> ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)

–ü—Ä–∏–º–µ—Ä—ã:
  node test-call-notifications.js
  node test-call-notifications.js --user-id 2

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ CRM —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5004
  `);
  process.exit(0);
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
console.log("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–≤–æ–Ω–∫–∞—Ö...");
console.log("üìã –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:");
console.log("   1. CRM —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5004");
console.log("   2. –ö–ª–∏–µ–Ω—Ç—Å–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ");
console.log("   3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID 1 –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ");
console.log("");

testCallNotifications();
